upstream exemplo {
    server 192.168.2.107:5588 max_fails=0 fail_timeout=10s weight=1;
    server 192.168.2.107:5589 max_fails=0 fail_timeout=10s weight=1;
    # Send visitors back to the same server each time.
    # ip_hash;
    # Enable number of keep-alive connections.
    keepalive 512;
}
server {
location / {
       # Set this to your upstream module.
       proxy_pass http://exemplo;
       # Headers to pass to proxy server.
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-Proto $scheme;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header Host $host;
       proxy_set_header X-NginX-Proxy true;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection "upgrade";
       proxy_cache_bypass $http_upgrade;
       proxy_http_version 1.1;
       proxy_redirect off;
       # Go to next upstream after if server down.
       proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
       proxy_connect_timeout 5s;
       # Gateway timeout.
       proxy_read_timeout 20s;
       proxy_send_timeout 20s;
       # Buffer settings.
       proxy_buffers 8 32k;
       proxy_buffer_size 64k;
   }
}